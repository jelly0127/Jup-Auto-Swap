/* tslint:disable */
/* eslint-disable */
/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit The rate limit is 50 requests / 10 seconds. If you need a higher rate limit, feel free to contact us on [#developer-support](https://discord.com/channels/897540204506775583/910250162402779146) on Discord.  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node) 
 *
 * The version of the OpenAPI document: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstructionObjectAccountsInner } from './InstructionObjectAccountsInner';
import {
    InstructionObjectAccountsInnerFromJSON,
    InstructionObjectAccountsInnerFromJSONTyped,
    InstructionObjectAccountsInnerToJSON,
} from './InstructionObjectAccountsInner';

/**
 * 
 * @export
 * @interface InstructionObject
 */
export interface InstructionObject {
    /**
     * 
     * @type {string}
     * @memberof InstructionObject
     */
    programId?: string;
    /**
     * 
     * @type {string}
     * @memberof InstructionObject
     */
    data?: string;
    /**
     * 
     * @type {Array<InstructionObjectAccountsInner>}
     * @memberof InstructionObject
     */
    accounts?: Array<InstructionObjectAccountsInner>;
}

/**
 * Check if a given object implements the InstructionObject interface.
 */
export function instanceOfInstructionObject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InstructionObjectFromJSON(json: any): InstructionObject {
    return InstructionObjectFromJSONTyped(json, false);
}

export function InstructionObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstructionObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'programId': !exists(json, 'programId') ? undefined : json['programId'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'accounts': !exists(json, 'accounts') ? undefined : ((json['accounts'] as Array<any>).map(InstructionObjectAccountsInnerFromJSON)),
    };
}

export function InstructionObjectToJSON(value?: InstructionObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'programId': value.programId,
        'data': value.data,
        'accounts': value.accounts === undefined ? undefined : ((value.accounts as Array<any>).map(InstructionObjectAccountsInnerToJSON)),
    };
}

