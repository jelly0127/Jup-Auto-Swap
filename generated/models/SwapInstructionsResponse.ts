/* tslint:disable */
/* eslint-disable */
/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit The rate limit is 50 requests / 10 seconds. If you need a higher rate limit, feel free to contact us on [#developer-support](https://discord.com/channels/897540204506775583/910250162402779146) on Discord.  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node) 
 *
 * The version of the OpenAPI document: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransactionObject } from './TransactionObject';
import {
    TransactionObjectFromJSON,
    TransactionObjectFromJSONTyped,
    TransactionObjectToJSON,
} from './TransactionObject';

/**
 * 
 * @export
 * @interface SwapInstructionsResponse
 */
export interface SwapInstructionsResponse {
    /**
     * 
     * @type {TransactionObject}
     * @memberof SwapInstructionsResponse
     */
    tokenLedgerInstruction?: TransactionObject;
    /**
     * The necessary instructions to setup the compute budget.
     * @type {Array<TransactionObject>}
     * @memberof SwapInstructionsResponse
     */
    computeBudgetInstructions?: Array<TransactionObject>;
    /**
     * Setup missing ATA for the users.
     * @type {Array<TransactionObject>}
     * @memberof SwapInstructionsResponse
     */
    setupInstructions?: Array<TransactionObject>;
    /**
     * 
     * @type {TransactionObject}
     * @memberof SwapInstructionsResponse
     */
    swapInstruction?: TransactionObject;
    /**
     * 
     * @type {TransactionObject}
     * @memberof SwapInstructionsResponse
     */
    cleanupInstruction?: TransactionObject;
    /**
     * The lookup table addresses that you can use if you are using versioned transaction.
     * @type {Array<TransactionObject>}
     * @memberof SwapInstructionsResponse
     */
    addressLookupTableAddresses?: Array<TransactionObject>;
}

/**
 * Check if a given object implements the SwapInstructionsResponse interface.
 */
export function instanceOfSwapInstructionsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SwapInstructionsResponseFromJSON(json: any): SwapInstructionsResponse {
    return SwapInstructionsResponseFromJSONTyped(json, false);
}

export function SwapInstructionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapInstructionsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tokenLedgerInstruction': !exists(json, 'tokenLedgerInstruction') ? undefined : TransactionObjectFromJSON(json['tokenLedgerInstruction']),
        'computeBudgetInstructions': !exists(json, 'computeBudgetInstructions') ? undefined : ((json['computeBudgetInstructions'] as Array<any>).map(TransactionObjectFromJSON)),
        'setupInstructions': !exists(json, 'setupInstructions') ? undefined : ((json['setupInstructions'] as Array<any>).map(TransactionObjectFromJSON)),
        'swapInstruction': !exists(json, 'swapInstruction') ? undefined : TransactionObjectFromJSON(json['swapInstruction']),
        'cleanupInstruction': !exists(json, 'cleanupInstruction') ? undefined : TransactionObjectFromJSON(json['cleanupInstruction']),
        'addressLookupTableAddresses': !exists(json, 'addressLookupTableAddresses') ? undefined : ((json['addressLookupTableAddresses'] as Array<any>).map(TransactionObjectFromJSON)),
    };
}

export function SwapInstructionsResponseToJSON(value?: SwapInstructionsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tokenLedgerInstruction': TransactionObjectToJSON(value.tokenLedgerInstruction),
        'computeBudgetInstructions': value.computeBudgetInstructions === undefined ? undefined : ((value.computeBudgetInstructions as Array<any>).map(TransactionObjectToJSON)),
        'setupInstructions': value.setupInstructions === undefined ? undefined : ((value.setupInstructions as Array<any>).map(TransactionObjectToJSON)),
        'swapInstruction': TransactionObjectToJSON(value.swapInstruction),
        'cleanupInstruction': TransactionObjectToJSON(value.cleanupInstruction),
        'addressLookupTableAddresses': value.addressLookupTableAddresses === undefined ? undefined : ((value.addressLookupTableAddresses as Array<any>).map(TransactionObjectToJSON)),
    };
}

